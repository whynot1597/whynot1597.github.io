{"version":3,"sources":["ListItemLink.js","ProfileDrawer.js","ProjectCard.js","project-details.js","StarredProjects.js","App.js","reportWebVitals.js","index.js"],"names":["ListItemLink","props","ListItem","button","component","target","rel","ProfileDrawer","classes","useState","avatarURL","setAvatarURL","username","setUsername","bio","setBio","htmlURL","setHTMLURL","login","setLogin","blog","setBlog","location","setLocation","setIsLoaded","useEffect","fetch","method","headers","Headers","Accept","then","res","json","response","avatar_url","name","html_url","catch","error","console","Drawer","className","drawer","variant","paper","drawerPaper","anchor","List","Avatar","src","logo","Typography","href","ListItemIcon","GitHub","ListItemText","primary","primaryTypographyProps","LinkedIn","Description","LocationOn","ProjectCard","CardActionArea","onClick","e","window","open","url","Card","card","CardHeader","avatar","title","titleTypographyProps","cardText","color","gutterBottom","description","CardActions","IconButton","aria-label","Link","projectDetails","StarredProjects","isLoaded","projects","setProjects","folders","filter","content","type","forEach","folder","project","proj","log","Grid","container","spacing","item","xs","map","html","darkTheme","createMuiTheme","palette","useStyles","makeStyles","theme","root","display","height","minWidth","maxWidth","text","background","padding","textAlign","fontSize","width","flexShrink","action","active","flexGrow","App","ThemeProvider","Paper","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18d78004.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { ListItem } from \"@material-ui/core\";\r\n\r\nfunction ListItemLink(props) {\r\n  return (\r\n    <ListItem\r\n      button\r\n      component=\"a\"\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport default ListItemLink;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { GitHub, LinkedIn, Description, LocationOn } from \"@material-ui/icons\";\r\nimport {\r\n  Avatar,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Drawer,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport ListItemLink from \"./ListItemLink\";\r\n\r\nexport default function ProfileDrawer(props) {\r\n  const classes = props.classes;\r\n  const [avatarURL, setAvatarURL] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [bio, setBio] = useState(\"\");\r\n  const [htmlURL, setHTMLURL] = useState(\"\");\r\n  const [login, setLogin] = useState(\"\");\r\n  const [blog, setBlog] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://api.github.com/users/whynot1597\", {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        Accept: \"application/vnd.github.cloak-preview\",\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        setAvatarURL(response.avatar_url);\r\n        setUsername(response.name);\r\n        setBio(response.bio);\r\n        setHTMLURL(response.html_url);\r\n        setLogin(response.login);\r\n        setBlog(response.blog);\r\n        setLocation(response.location);\r\n        setIsLoaded(true);\r\n      })\r\n      .catch((error) => console.error(error));\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n        anchor=\"left\"\r\n      >\r\n        <List>\r\n          <ListItem key=\"avatarURL\">\r\n            <Avatar src={avatarURL} className={classes.logo} />\r\n          </ListItem>\r\n        </List>\r\n        <ListItem key=\"name\">\r\n          <Typography variant=\"h3\">{username}</Typography>\r\n        </ListItem>\r\n        <ListItem key=\"bio\">\r\n          <Typography variant=\"h4\">{bio}</Typography>\r\n        </ListItem>\r\n        <ListItem button key=\"github\" href={htmlURL}>\r\n          <ListItemIcon>\r\n            <GitHub />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary={\"@\" + login}\r\n            primaryTypographyProps={{ variant: \"button\" }}\r\n          />\r\n        </ListItem>\r\n        <ListItem button key=\"linkedin\" href={blog}>\r\n          <ListItemIcon>\r\n            <LinkedIn />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"LinkedIn Profile\"\r\n            primaryTypographyProps={{ variant: \"button\" }}\r\n          />\r\n        </ListItem>\r\n        <ListItemLink\r\n          button\r\n          key=\"resume\"\r\n          href=\"https://whynot1597.github.io/Jeremy_Goldberg_Resume.pdf\"\r\n        >\r\n          <ListItemIcon>\r\n            <Description />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Resume\"\r\n            primaryTypographyProps={{ variant: \"button\" }}\r\n          />\r\n        </ListItemLink>\r\n        <ListItem key=\"location\">\r\n          <ListItemIcon>\r\n            <LocationOn />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary={location}\r\n            primaryTypographyProps={{ variant: \"button\" }}\r\n          />\r\n        </ListItem>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  Card,\r\n  CardActionArea,\r\n  CardActions,\r\n  CardHeader,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"@material-ui/icons\";\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\nimport React from \"react\";\r\n\r\nfunction ProjectCard(props) {\r\n  const classes = props.classes;\r\n\r\n  const handleButton = (e) => {\r\n    window.open(props.url, \"_blank\");\r\n  };\r\n\r\n  return (\r\n    <CardActionArea onClick={handleButton}>\r\n      <Card className={classes.card}>\r\n        <CardHeader\r\n          avatar={<FolderIcon />}\r\n          title={props.name}\r\n          titleTypographyProps={{ variant: \"h4\" }}\r\n        />\r\n        <Typography\r\n          className={classes.cardText}\r\n          color=\"textPrimary\"\r\n          gutterBottom\r\n          variant=\"body2\"\r\n        >\r\n          {props.description}\r\n        </Typography>\r\n        <CardActions>\r\n          <IconButton aria-label=\"open repo\">\r\n            <Link />\r\n          </IconButton>\r\n        </CardActions>\r\n      </Card>\r\n    </CardActionArea>\r\n  );\r\n}\r\n\r\nexport default ProjectCard;\r\n","const projectDetails = [\r\n  {\r\n    name: \"Cognitive System Design\",\r\n    description:\r\n      \"This was a group project where we completely designed a Pacman-like agent using approximate q-learning with a feature-based representation. This agent was completely designed by this group. My contribution consisted of implementing the features of the agent and updating its history.\",\r\n  },\r\n  {\r\n    name: \"Complier\",\r\n    description:\r\n      \"This was a group project where we designed a comouter langauge from scratch. We wrote a grammer, constructed abstract syntax trees, performed semantic analysis, and optimized the resulting code. I contributed to all of these sections in varying capacity. Larger sections of my work are located in the grammar and optimization secions\",\r\n  },\r\n  {\r\n    name: \"Databases\",\r\n    description:\r\n      \"This was a group project where we took a sample dataset from Board Game Geek and built a full database sdk around the dataset. We provided functions to users to add ratings and games. We also wrote functions that allowed users to determine useful queries, such as the top rated games.\",\r\n  },\r\n  {\r\n    name: \"Intro to AI\",\r\n    description: \r\n      \"This was a group project where we created an agent using bayesian inference. The goal of this agent is to figure out how to capture the ghosts in the maze as quickly as possible. I was largely responsible for creating the code that did the majority of heavy calculations in this code.\",\r\n  },\r\n  {\r\n    name: \"Networks\",\r\n    description:\r\n      \"This was a solo project where I created a WebSocket server designed to run on a ESP-8266 Wi-Fi board. This server is used to control an LED light strip. I wrote all the code that is used to create the server as well as send the signals to the LED light strip.\"\r\n  },\r\n  {\r\n    name: \"Theory of Compuation\",\r\n    description:\r\n      \"This was a solo project where I wrote a React-based webapp that allowed users to create Determinisitc Finite Automaton and Nondeterminisitc Finite Automaton. This app also provides a variety of functionality to the user including creating the alphabet and converting between the different automaton.\"\r\n  },\r\n  {\r\n    name: \"Thesis\",\r\n    description:\r\n      \"This was a group project that created a React-based webapp that trained users on how to use a synthesizer online. I was responsible for creating all the webpages and creating a template for all the information. I also used Google's firebase product to store and update user information for easy navigation and credential storing.\"\r\n  },\r\n  {\r\n    name: \"portfolio-site\",\r\n    description:\r\n      \"This is a solo project I created to display my various projects. It is a React webapp that links people to useful information including social media links and code repositories. It is hosted on GitHub Pages.\"\r\n  },\r\n];\r\n\r\nexport default projectDetails;\r\n","import { Grid, Typography } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport ProjectCard from \"./ProjectCard\";\r\nimport projectDetails from \"./project-details\";\r\n\r\nfunction StarredProjects(props) {\r\n  const classes = props.classes;\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [projects, setProjects] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (!isLoaded) {\r\n      fetch(\r\n        \"https://api.github.com/repos/whynot1597/College-Portfolio/contents\",\r\n        {\r\n          method: \"GET\",\r\n          headers: new Headers({\r\n            Accept: \"application/vnd.github.cloak-preview\",\r\n          }),\r\n        }\r\n      )\r\n        .then((res) => res.json())\r\n        .then((response) => {\r\n          const folders = response.filter((content) => content.type === \"dir\");\r\n          folders.forEach((folder) => {\r\n            const project = projectDetails.filter(\r\n              (proj) => proj.name === folder.name\r\n            );\r\n            folder.description = project[0].description;\r\n          });\r\n          console.log(folders);\r\n          setProjects(folders);\r\n          setIsLoaded(true);\r\n        })\r\n        .catch((error) => console.error(error));\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={3}>\r\n        <Grid item key=\"header\" xs={12}>\r\n          <Typography variant=\"h4\">My Github Repositories</Typography>\r\n        </Grid>\r\n        {projects.map((project) => {\r\n          return (\r\n            <Grid item key={project.name}>\r\n              <ProjectCard\r\n                name={project.name}\r\n                url={project[\"_links\"].html}\r\n                description={project.description}\r\n                {...props}\r\n              />\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StarredProjects;\r\n","import ProfileDrawer from \"./ProfileDrawer\";\r\nimport React from \"react\";\r\nimport {\r\n  makeStyles,\r\n  createMuiTheme,\r\n  ThemeProvider,\r\n} from \"@material-ui/core/styles\";\r\nimport \"./App.css\";\r\nimport StarredProjects from \"./StarredProjects\";\r\nimport { Paper } from \"@material-ui/core\";\r\n\r\nconst darkTheme = createMuiTheme({\r\n  palette: {\r\n    type: \"dark\",\r\n  },\r\n});\r\n\r\nconst lightTheme = createMuiTheme({\r\n  palette: {\r\n    type: \"light\",\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    height: \"100%\",\r\n  },\r\n  card: {\r\n    minWidth: theme.spacing(20),\r\n    maxWidth: theme.spacing(40),\r\n    color: theme.palette.text.primary,\r\n    background: theme.palette.background.paper,\r\n  },\r\n  cardText: {\r\n    color: theme.palette.text.primary,\r\n    padding: theme.spacing(1),\r\n    textAlign: \"left\",\r\n    fontSize: 15,\r\n  },\r\n  drawer: {\r\n    width: theme.spacing(50),\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: theme.spacing(50),\r\n    background: theme.palette.action.active,\r\n  },\r\n  logo: {\r\n    width: theme.spacing(20),\r\n    height: theme.spacing(20),\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n  },\r\n  background: {\r\n    height: \"100vh\",\r\n  },\r\n}));\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ThemeProvider theme={darkTheme}>\r\n      <div className={classes.background}>\r\n        <Paper className={classes.root}>\r\n          <ProfileDrawer classes={classes} />\r\n          <StarredProjects classes={classes} />\r\n        </Paper>\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}